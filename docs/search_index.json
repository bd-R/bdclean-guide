[
["index.html", "bdclean User Guide Introduction", " bdclean User Guide Authors: Tomer Gueta and Thiloshon Nagarajah 2018-09-05 Introduction bdclean is a user-friendly data cleaning Shiny app for the inexperienced R user. It provides features to manage complete workflow for biodiversity data cleaning, from uploading the data; gathering input from the user, in order to adjust cleaning procedures; perform the cleaning; and finally, generating various reports and several versions of the data. bdclean is part of The bdverse – a collection of tools, that form a general framework for facilitating biodiversity science in R. bdclean in the bdverse bdclean overview bdclean overview bdclean workflow is comprised of three distinct mechanisms, user input, data cleaning and outputs. In most R packages this basic workflow (i.e. input; processing; output) operates via an R function. Functions are fundamental building blocks of R, and usually focus on very specific task. Users must understand and supply the function with its mandatory arguments (e.g. data in the specified format, setting of various function variables). Thus, in order to create a specific workflow, users must write an R script, which requires reasonable programing skills. bdclean avoids all that by creating a user-friendly Shiny app with questionnaire that collects the necessary user input. App overview Fundings See the GSoC project idea page "],
["installing-bdclean.html", "1 Installing bdclean 1.1 Development version from GitHub 1.2 Very soon: a stable version from CRAN 1.3 Possible problems &amp; solutions", " 1 Installing bdclean 1.1 Development version from GitHub Windows users install Rtools first. install.packages(&quot;devtools&quot;) devtools::install_github(&quot;bd-R/bdclean&quot;) # And also devtools::install_github(&quot;bd-R/bdchecks&quot;) To open the Shiny app, simply run: run_bdclean() 1.2 Very soon: a stable version from CRAN install.packages(&quot;bdDwC&quot;) 1.3 Possible problems &amp; solutions [ TBA ] 1.3.1 ??? TBA 1.3.2 ???? TBA "],
["add-data.html", "2 Add data 2.1 Load package 2.2 Darwinizing a dataset 2.3 Updating the Darwin Cloud dictionary", " 2 Add data 2.1 Load package Load the bdDwC package library(bdDwC) 2.2 Darwinizing a dataset bdDwC contains Indian Reptile dataset bdDwC:::dataReptiles. The function to Darwinize a dataset isdarwinizeNames (replace bdDwC:::dataReptiles with wanted dataset): result &lt;- darwinizeNames(dataUser = bdDwC:::dataReptiles, dataDWC = bdDwC:::dataDarwinCloud$data) You can replace bdDwC:::dataReptiles with your dataset Rename your dataset field names to Darwinized names using renameUserData: renameUserData(bdDwC:::dataReptiles, result) 2.3 Updating the Darwin Cloud dictionary To get newest version of Darwin Cloud Data run: downloadCloudData() which will download data from the remote repository and extract field and standard names. "],
["data-cleaning-configuration.html", "3 Data cleaning configuration 3.1 Launching the app 3.2 App overview 3.3 Data upload 3.4 Dictionaries 3.5 Darwinizing your dataset 3.6 Darwinizer results 3.7 Download your Darwinized data 3.8 Closing the app 3.9 References", " 3 Data cleaning configuration 3.1 Launching the app library(bdDwC) # Uplaod package library runDwC() # Launch the app 3.2 App overview bdDwC App Overview In the first screen, you’ll need to upload or download your biodiversity data; choose dictionary and run the Darwinizer. 3.3 Data upload 3.3.1 From a local file A CSV file or a Darwin Core Archive (DwC-A) zip file can be uploaded. Data upload from a local file 3.3.2 From an online database Also, data can be retrieved directly from various online biodiversity databases. You need only to: Select the database Specify the desired scientific name. Specify the number of records (upper limit of 50,000). Check the box if records must have coordinates. Wait for data to be downloaded. Data upload from online biodiversity databases 3.4 Dictionaries A dictionary is a key component when Darwinizing a dataset. It’s basically a lookup table that lists a possible variation of field name and it corresponding DwC name. 3.4.1 The Darwin Cloud dictionary The Darwin Cloud dictionary (Wieczorek et al. 2017), is a lookup table that accumulates different variations in DwC field names from different publishers. This valuable and critical dictionary was created and is maintained by the Kurator project (http://kurator.acis.ufl.edu/kurator-web/), which provides workflow tools for data quality improvement of biodiversity data, via a user-friendly web interface. The development of bdDwC was inspired by Kurator’s own Darwinizer. Updating the Darwin Cloud It’s recommended to update the Darwin Cloud file. This can be done easily by clicking the Update DC button. Updating the Darwin Cloud 3.4.2 Your own dictionary It’s also possible to add your own dictionary by simply creating a CSV file with two columns, one for the Field Names and one for the Standard Names. Uploading your own dictionary 3.5 Darwinizing your dataset Once a dataset is uploaded, the ‘Submit to Darwinizer’ button is activated, Clicking it will Darwinize the dataset. Submit to Darwinizer button 3.6 Darwinizer results 3.6.1 Results page overwiew Darwinizer results Manually renaming field names can be done very easily, just choose the two corresponding fields and click the Rename button. Manually renaming fields Hovering over a DwC standard name will display its description. 3.7 Download your Darwinized data 3.8 Closing the app Just close the app browser tab, and the R session will be terminated. To reopen it run in the R Console runDwC(). 3.9 References References "],
["flag-and-clean-the-data.html", "4 Flag and clean the data 4.1 Load package 4.2 Darwinizing a dataset 4.3 Updating the Darwin Cloud dictionary", " 4 Flag and clean the data 4.1 Load package Load the bdDwC package library(bdDwC) 4.2 Darwinizing a dataset bdDwC contains Indian Reptile dataset bdDwC:::dataReptiles. The function to Darwinize a dataset isdarwinizeNames (replace bdDwC:::dataReptiles with wanted dataset): result &lt;- darwinizeNames(dataUser = bdDwC:::dataReptiles, dataDWC = bdDwC:::dataDarwinCloud$data) You can replace bdDwC:::dataReptiles with your dataset Rename your dataset field names to Darwinized names using renameUserData: renameUserData(bdDwC:::dataReptiles, result) 4.3 Updating the Darwin Cloud dictionary To get newest version of Darwin Cloud Data run: downloadCloudData() which will download data from the remote repository and extract field and standard names. "],
["artifacts-and-reports.html", "5 Artifacts and reports", " 5 Artifacts and reports [ TBA ] "],
["getting-your-feedback.html", "6 Getting your feedback 6.1 Report a bug 6.2 Contribute", " 6 Getting your feedback Loading… 6.1 Report a bug Submit an issue at https://github.com/bd-R/bdclean/issues 6.2 Contribute Contribute: https://github.com/bd-R/bdclean Join: https://bd-r-group.slack.com "],
["bdclean-citation.html", "7 bdclean citation", " 7 bdclean citation citation(&quot;bdclean&quot;) ## ## To cite package &#39;bdclean&#39; in publications use: ## ## Tomer Gueta, Thiloshon Nagarajah, Vijay Barve, Ashwin Agrawal, ## Povilas Gibas and Yohay Carmel (2018). bdclean: A user-friendly ## data cleaning app for the inexperienced R user. R package ## version 0.1.900. https://github.com/bd-R/bdclean ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {bdclean: A user-friendly data cleaning app for the inexperienced R user}, ## author = {Tomer Gueta and Thiloshon Nagarajah and Vijay Barve and Ashwin Agrawal and Povilas Gibas and Yohay Carmel}, ## year = {2018}, ## note = {R package version 0.1.900}, ## url = {https://github.com/bd-R/bdclean}, ## } "],
["learn-more-about-data-cleaning.html", "8 Learn more about data cleaning", " 8 Learn more about data cleaning The Darwin Core Questions &amp; Answers Site Darwin Core Hour webinar series The Darwin Core Questions &amp; Answers wiki GBIF: What is Darwin Core, and why does it matter? Darwin Core: An Evolving Community-Developed Biodiversity Data Standard (Wieczorek et al. 2012) References "]
]
